[tox]
envlist = py26,py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
    DISCOVER_DIRECTORY=sahara/tests/unit
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands = python setup.py test --slowest --testr-args="{posargs}"
whitelist_externals = bash

[testenv:integration]
setenv =
    VIRTUAL_ENV={envdir}
    DISCOVER_DIRECTORY=sahara/tests/integration
commands = python setup.py test --slowest --testr-args="{posargs}"

[testenv:cover]
commands = python setup.py testr --coverage --testr-args='{posargs}'

[tox:jenkins]
downloadcache = ~/cache/pip

[testenv:pep8]
commands =
    flake8 {posargs}
    {toxinidir}/tools/config/check_uptodate.sh
    # Check that .po and .pot files are valid:
    bash -c "find sahara -type f -regex '.*\.pot?' -print0|xargs -0 -n 1 msgfmt --check-format -o /dev/null"

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands =
    rm -rf doc/html doc/build
    rm -rf doc/source/apidoc doc/source/api
    python setup.py build_sphinx

[testenv:pylint]
setenv = VIRTUAL_ENV={envdir}
commands = bash tools/lintstack.sh

[flake8]
# E112 expected an indented block
# E122 continuation line missing indentation or outdented
# E128 continuation line under-indented for visual indent
# E226 missing whitespace around arithmetic operator
# E241 multiple spaces after ':'
# E251 unexpected spaces around keyword / parameter equals
# E713 test for membership should be 'not in'
# F402 import 'u' from line 23 shadowed by loop variable
# H202 assertRaises Exception too broad
# H305 imports not grouped correctly (re: stdlib, six: third-party)
# H307 like imports should be grouped together (six and oslo.config.cfg from third-party are separated by whitespace)
# H904 Wrap long lines in parentheses instead of a backslash
ignore = E112,E122,E128,E226,E241,E251,E713,F402,H202,H305,H307,H904
show-source = true
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,tools

[hacking]
local-check-factory = sahara.utils.hacking.checks.factory
